@using Orchard.Comments;
@using Orchard.Comments.Models
@using Orchard.Comments.Settings
@using Orchard.Utility.Extensions;

@{
    CommentsPart commentsPart = Model.ContentPart;
    var settings = commentsPart.TypePartDefinition.Settings.GetModel<CommentsPartSettings>();
}

@if (!Model.ContentPart.CommentsActive) {
    if (Model.ContentPart.Comments.Count > 0) {
        <div class="subpage-title">
            <h5>@T("Comments have been disabled for this content.")</h5>
        </div>
    }
}
else if (settings.MustBeAuthenticated && WorkContext.CurrentUser == null) {
    <div class="subpage-title">
        <h5>Add Comment</h5>
    </div>
    <p>@T("You must {0} to comment.", Html.ActionLink(T("sign in").ToString(), "LogOn",
        new { Controller = "Account", Area = "Orchard.Users", ReturnUrl = string.Format("{0}#addacomment", Context.Request.RawUrl) }))
    </p>
}
else if (WorkContext.CurrentUser == null && !AuthorizedFor(Permissions.AddComment)) {
    <div class="subpage-title">
        <h5>Add Comment</h5>
    </div>
    <p>@T("You must {0} to comment.", Html.ActionLink(T("sign in").ToString(), "LogOn",
        new { Controller = "Account", Area = "Orchard.Users", ReturnUrl = string.Format("{0}#addacomment", Context.Request.RawUrl) }))
    </p>
}
else {
    <span id="comment-form-beacon" />
    using (Html.BeginFormAntiForgeryPost(Url.Action("Create", "Comment", new { Area = "Orchard.Comments", ReturnUrl = Context.Request.ToUrlString() }), FormMethod.Post, new { id = "commentform", @class = "comment-form pad-top-25" })) {
        <div class="subpage-title">
            <h5>Add Comment</h5>
        </div>
        @Html.ValidationSummary()
        if (TempData.ContainsKey("Comments.InvalidCommentEditorShape")) {
            @Display(TempData["Comments.InvalidCommentEditorShape"]);
        }
        else {
            @Display(Model.EditorShape)
        }
    }
}